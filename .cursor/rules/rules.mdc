---
alwaysApply: true
---

Always use context7 for code generation, setup, configuration, or library/API docs.

# Vue 3 + Figma Tokens - Cursor Rules

## КРИТИЧЕСКИЕ ЗАПРЕТЫ

### НЕТ TAILWIND
- Никаких Tailwind классов (flex, px-4, bg-blue-500, text-sm, rounded)
- Никаких utility классов или @apply

### НЕТ ХАРДКОДА
- Цвета: #3b82f6, rgba()
- Размеры: 16px, 2rem
- Inline стили без токенов

### НЕ ПРИДУМЫВАЙ
- Названия токенов
- Значения свойств
- CSS свойства которых нет в Figma

## ОБЯЗАТЕЛЬНАЯ СТРУКТУРА

```vue
<template>
  <div :class="['o-component', `o-component--${variant}`]">
    <slot />
  </div>
</template>

<script setup>
import { useDesignTokens } from '@/composables/useDesignTokens';

defineProps({
  variant: {
    type: String,
    default: 'primary',
    validator: (v) => ['primary', 'secondary'].includes(v)
  }
});
</script>

<style scoped>
.o-component {
  background: var(--color-background-primary);
  padding: var(--spacing-md);
}

.o-component--secondary {
  background: var(--color-background-secondary);
}
</style>
```

## WORKFLOW СОЗДАНИЯ КОМПОНЕНТА

### Из Figma (MCP):

1. **MCP Figma** → получи props, размеры, стили
2. **Найди токены**: `npm run tokens:info --search [name]`
3. **ПОКАЖИ МНЕ токены** → ЖДИ ПОДТВЕРЖДЕНИЯ
4. **Создай компонент + Stories**

### Figma размеры:

- **Hug** → `min-width`, `min-height` (растет по содержимому)
- **Fixed** → `width`, `height` (фиксированный)
- **Fill** → `width: 100%` или `flex: 1`

### Если токена нет:

❌ НЕ придумывай  
✅ СПРОСИ у пользователя  
✅ Предложи похожие токены

## ИМЕНОВАНИЕ

### ПРЕФИКС "O" - ОБЯЗАТЕЛЬНО
- **ВСЕ компоненты дизайн-системы** должны иметь префикс "O"
- Это показывает, что компонент использует новую дизайн-систему с токенами
- Компоненты: `OButton.vue`, `OCounter.vue`, `OIconWrap.vue`
- Stories: `OButton.stories.js`, `OCounter.stories.js`
- Импорты: `@/components/OButton.vue`, `@/components/OCounter.vue`

### ПРАВИЛА ПРЕФИКСА "O":
- ✅ **O** = Olymp Design System компонент
- ✅ Всегда используй префикс O для новых компонентов
- ✅ Обновляй существующие компоненты с префиксом O
- ✅ В документации указывай полное название с префиксом
- ❌ НЕ создавай компоненты БЕЗ префикса O

## STORYBOOK TEMPLATE

```javascript
import OComponent from '../src/components/OComponent.vue';
import { useDesignTokens } from '../src/composables/useDesignTokens';

export default {
  title: 'Components/ComponentName',
  component: OComponent,
  tags: ['autodocs'], // ОБЯЗАТЕЛЬНО
  argTypes: {
    variant: {
      control: 'select',
      options: ['primary', 'secondary'],
      description: 'Вариант стиля'
    }
  },
  decorators: [
    (story, context) => {
      const { setTheme, setBreakpoint } = useDesignTokens();
      if (context.globals.theme) setTheme(context.globals.theme);
      if (context.globals.breakpoint) setBreakpoint(context.globals.breakpoint);
      return { components: { story }, template: '<story />' };
    }
  ]
};

// CSF3 формат с объектами
export const Primary = {
  args: {
    variant: 'primary'
  }
};
```

### Stories требования:

✅ `tags: ['autodocs']` - ОБЯЗАТЕЛЬНО  
✅ CSF3 формат: `export const Primary = { args: {...} }`  
✅ Decorators для тем  
✅ argTypes с описаниями  
✅ Минимум 3 stories: Primary, AllVariants, InContext  

❌ НЕ используй `.bind({})` - не работает с темами  
❌ НЕ используй функции-истории `(args) => Template(args)`

## ЕДИНИЦЫ ИЗМЕРЕНИЯ

Автоматически добавляются `px` для:
- spacing, padding, margin, gap
- size, width, height
- border, radius

НЕ добавляются для:
-  font-weight, line-height, z-index

## КОМАНДЫ

```bash
npm run tokens:info --search button    # Поиск
npm run tokens:validate                # Валидация
npm run tokens:generate-docs           # Обновить docs
npm run storybook                      # Запуск
```

## ЧЕК-ЛИСТ

- [ ] Нет Tailwind классов
- [ ] Нет хардкода
- [ ] Все токены существуют
- [ ] все Props совпадают с Figma!
- [ ] Stories созданы
- [ ] `tags: ['autodocs']` есть

## ПРИМЕРЫ

### ❌ НЕПРАВИЛЬНО

```vue
<div class="flex px-4 bg-blue-500">
<div style="padding: 16px">
.button { background: #3b82f6; }
```

### ✅ ПРАВИЛЬНО

```vue
<div :class="['o-button', 'o-button--primary']">

<style>
.o-button {
  padding: var(--button-padding-vertical-lg) var(--button-padding-horizontal-lg);
  background: var(--color-background-button-primary-default);
}
</style>
```

## ОТЛАДКА

### Токены не применяются:

1. DevTools → Elements → :root
2. Проверь CSS переменные
3. Консоль → предупреждения resolver

### Токен не найден:

```javascript
import { findVariablesByPattern } from '@/utils/figma-variables-resolver';
console.log(findVariablesByPattern('button', 'Semantic'));
```

---

**Главное:** Покажи токены ДО кода. Не придумывай. Не используй Tailwind. Спрашивай если не уверен.