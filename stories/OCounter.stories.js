import OCounter from '../src/components/OCounter.vue'
import { useDesignTokens } from '../src/composables/useDesignTokens'

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –∫–æ–¥–∞
const generateCode = (args) => {
  const props = [];
  
  // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–µ props (–Ω–µ –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ)
  if (args.label && args.label !== '2') props.push(`label="${args.label}"`);
  if (args.variant && args.variant !== 'primary') props.push(`variant="${args.variant}"`);
  if (args.size && args.size !== 'md') props.push(`size="${args.size}"`);
  
  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —á–∏—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç–∏
  if (props.length <= 2) {
    return `<OCounter ${props.join(' ')} />`;
  } else {
    return `<OCounter\n  ${props.join('\n  ')}\n/>`;
  }
};

export default {
  title: 'Components/OCounter',
  component: OCounter,
  tags: ['autodocs'], // ‚ö†Ô∏è –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
  argTypes: {
    label: {
      control: { type: 'text' },
      description: '–¢–µ–∫—Å—Ç –∏–ª–∏ —á–∏—Å–ª–æ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Å—á–µ—Ç—á–∏–∫–µ',
      table: {
        defaultValue: { summary: '2' }
      }
    },
    variant: {
      control: { type: 'select' },
      options: ['primary', 'secondary', 'tertiary', 'inverse'],
      description: '–°—Ç–∏–ª—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞',
      table: {
        defaultValue: { summary: 'primary' }
      }
    },
    size: {
      control: { type: 'select' },
      options: ['md', 'sm', 'xs'],
      description: '–†–∞–∑–º–µ—Ä –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞',
      table: {
        defaultValue: { summary: 'md' }
      }
    }
  },
  decorators: [
    (story, context) => {
      const { setTheme, setBreakpoint } = useDesignTokens();
      if (context.globals.theme) setTheme(context.globals.theme);
      if (context.globals.breakpoint) setBreakpoint(context.globals.breakpoint);
      return { components: { story }, template: '<story />' };
    }
  ],
  parameters: {
    docs: {
      description: {
        component: '–ö–æ–º–ø–æ–Ω–µ–Ω—Ç OCounter –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–∫, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏ –∫–æ–º–ø–∞–∫—Ç–Ω—ã—Ö —á–∏—Å–ª–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π. –ü—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –≤ —Å–æ—Å—Ç–∞–≤–µ –∫–Ω–æ–ø–æ–∫, –±–µ–π–¥–∂–µ–π, —Ç–µ–≥–æ–≤ –∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤.'
      }
    }
  }
}

// –û—Å–Ω–æ–≤–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã - –ò–°–ü–û–õ–¨–ó–£–ï–ú CSF3 –§–û–†–ú–ê–¢ –° –û–ë–™–ï–ö–¢–ê–ú–ò
export const Primary = {
  args: {
    label: '2',
    variant: 'primary',
    size: 'md'
  },
  render: (args) => ({
    components: { OCounter },
    setup() { return { args }; },
    template: '<OCounter v-bind="args" />'
  }),
  parameters: {
    docs: {
      source: {
        transform: (code, storyContext) => generateCode(storyContext.args),
      },
    },
  },
}

export const Secondary = {
  args: {
    label: '5',
    variant: 'secondary',
    size: 'md'
  },
  render: (args) => ({
    components: { OCounter },
    setup() { return { args }; },
    template: '<OCounter v-bind="args" />'
  }),
  parameters: {
    docs: {
      source: {
        transform: (code, storyContext) => generateCode(storyContext.args),
      },
    },
  },
}

export const Tertiary = {
  args: {
    label: '12',
    variant: 'tertiary',
    size: 'md'
  },
  render: (args) => ({
    components: { OCounter },
    setup() { return { args }; },
    template: '<OCounter v-bind="args" />'
  }),
  parameters: {
    docs: {
      source: {
        transform: (code, storyContext) => generateCode(storyContext.args),
      },
    },
  },
}

export const Inverse = {
  args: {
    label: '99+',
    variant: 'inverse',
    size: 'md'
  },
  render: (args) => ({
    components: { OCounter },
    setup() { return { args }; },
    template: '<OCounter v-bind="args" />'
  }),
  parameters: {
    docs: {
      source: {
        transform: (code, storyContext) => generateCode(storyContext.args),
      },
    },
  },
}

// –ò—Å—Ç–æ—Ä–∏—è Docs –¥–ª—è –∞–≤—Ç–æ–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
export const Docs = {
  args: {
    label: '42',
    variant: 'primary',
    size: 'md'
  },
  render: (args) => ({
    components: { OCounter },
    setup() { return { args }; },
    template: '<OCounter v-bind="args" />'
  }),
  parameters: {
    docs: {
      source: {
        transform: (code, storyContext) => generateCode(storyContext.args),
      },
      description: {
        story: '–û—Å–Ω–æ–≤–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ OCounter —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏ –æ–ø–∏—Å–∞–Ω–∏–µ–º –≤—Å–µ—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤'
      }
    }
  }
}

// –í—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
export const AllVariants = {
  render: () => ({
    components: { OCounter },
    template: `
      <div class="story-container">
        <div class="story-row">
          <span class="story-label">Primary:</span>
          <OCounter label="2" variant="primary" size="md" />
          <OCounter label="5" variant="primary" size="sm" />
          <OCounter label="99+" variant="primary" size="xs" />
        </div>
        <div class="story-row">
          <span class="story-label">Secondary:</span>
          <OCounter label="2" variant="secondary" size="md" />
          <OCounter label="5" variant="secondary" size="sm" />
          <OCounter label="99+" variant="secondary" size="xs" />
        </div>
        <div class="story-row">
          <span class="story-label">Tertiary:</span>
          <OCounter label="2" variant="tertiary" size="md" />
          <OCounter label="5" variant="tertiary" size="sm" />
          <OCounter label="99+" variant="tertiary" size="xs" />
        </div>
        <div class="story-row story-row--dark">
          <span class="story-label">Inverse:</span>
          <OCounter label="2" variant="inverse" size="md" />
          <OCounter label="5" variant="inverse" size="sm" />
          <OCounter label="99+" variant="inverse" size="xs" />
        </div>
      </div>
    `
  }),
  parameters: {
    docs: {
      source: {
        transform: (code, storyContext) => generateCode(storyContext.args),
      },
    },
  },
};

// –í—Å–µ —Ä–∞–∑–º–µ—Ä—ã
export const AllSizes = {
  render: () => ({
    components: { OCounter },
    template: `
      <div class="story-container">
        <div class="story-row">
          <span class="story-label">MD:</span>
          <OCounter label="10" size="md" />
          <OCounter label="10" size="md" variant="secondary" />
        </div>
        <div class="story-row">
          <span class="story-label">SM:</span>
          <OCounter label="10" size="sm" />
          <OCounter label="10" size="sm" variant="secondary" />
        </div>
        <div class="story-row">
          <span class="story-label">XS:</span>
          <OCounter label="10" size="xs" />
          <OCounter label="10" size="xs" variant="secondary" />
        </div>
      </div>
    `
  }),
  parameters: {
    docs: {
      source: {
        transform: (code, storyContext) => generateCode(storyContext.args),
      },
    },
  },
};

// –õ–æ–≥–∏–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —á–∏—Å–µ–ª
export const NumberLogic = {
  render: () => ({
    components: { OCounter },
    template: `
      <div class="story-container number-logic-container">
        <div class="number-group">
          <span class="number-label">1:</span>
          <OCounter label="1" />
        </div>
        <div class="number-group">
          <span class="number-label">99:</span>
          <OCounter label="99" />
        </div>
        <div class="number-group">
          <span class="number-label">100:</span>
          <OCounter label="100" />
        </div>
        <div class="number-group">
          <span class="number-label">1000:</span>
          <OCounter label="1000" />
        </div>
        <div class="number-group">
          <span class="number-label">Custom:</span>
          <OCounter label="New!" />
        </div>
      </div>
    `
  }),
  parameters: {
    docs: {
      source: {
        transform: (code, storyContext) => generateCode(storyContext.args),
      },
    },
  },
};

// –í –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∫–Ω–æ–ø–∫–∞)
export const InContext = {
  render: () => ({
    components: { OCounter },
    template: `
      <div class="context-container">
        <h3>–ù–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è</h3>
        <div class="context-buttons">
          <button class="context-button context-button--primary">
            –í—Ö–æ–¥—è—â–∏–µ
            <OCounter label="3" variant="inverse" size="sm" />
          </button>
          <button class="context-button context-button--secondary">
            –ê—Ä—Ö–∏–≤
            <OCounter label="15" variant="primary" size="sm" />
          </button>
        </div>
        
        <h3>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
        <div class="context-stats">
          <div class="stat-item">
            –õ–∞–π–∫–∏:
            <OCounter label="1.2K" variant="primary" size="md" />
          </div>
          <div class="stat-item">
            –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏:
            <OCounter label="247" variant="secondary" size="sm" />
          </div>
        </div>

        <h3>–ê–≤–∞—Ç–∞—Ä—ã</h3>
        <div class="context-avatars">
          <div class="avatar-container">
            <span class="avatar-icon">üë§</span>
            <div class="avatar-badge">
              <OCounter label="2" variant="primary" size="xs" />
            </div>
          </div>
          <div class="avatar-container">
            <span class="avatar-icon">üîî</span>
            <div class="avatar-badge">
              <OCounter label="99+" variant="inverse" size="xs" />
            </div>
          </div>
        </div>
      </div>
    `
  }),
  parameters: {
    docs: {
      source: {
        transform: (code, storyContext) => generateCode(storyContext.args),
      },
    },
  },
};

// –î–æ–±–∞–≤–ª—è–µ–º CSS —Å—Ç–∏–ª–∏ –¥–ª—è Stories
const storyStyles = `
<style>
.story-container {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-md);
  padding: var(--spacing-md);
}

.story-row {
  display: flex;
  align-items: center;
  gap: var(--spacing-md);
  padding: var(--spacing-sm);
  border-radius: var(--border-radius-md);
  background-color: var(--color-background-page-lvl-1);
}

.story-row--dark {
  background-color: var(--color-background-page-lvl-2);
}

.story-label {
  font-size: var(--typography-font-size-sm);
  font-weight: var(--typography-font-weight-medium);
  width: 80px;
  color: var(--color-text-primary);
  font-family: var(--typography-font-family-body);
}

.story-row--dark .story-label {
  color: var(--color-text-inverse);
}

/* –ù–æ–≤—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è –∑–∞–º–µ–Ω—ã Tailwind */
.sizes-container {
  display: flex;
  align-items: center;
  gap: var(--spacing-md);
}

.number-logic-container {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-md);
}

.number-group {
  display: flex;
  align-items: center;
  gap: var(--spacing-md);
}

.number-label {
  font-size: var(--typography-font-size-sm);
  color: var(--color-text-secondary);
  width: 80px;
  font-family: var(--typography-font-family-body);
}

.context-container {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-lg);
  padding: var(--spacing-lg);
  background-color: var(--color-background-page-lvl-1);
  border-radius: var(--border-radius-lg);
}

.context-buttons {
  display: flex;
  align-items: center;
  gap: var(--spacing-md);
}

.context-button {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
  padding: var(--spacing-sm) var(--spacing-md);
  border-radius: var(--border-radius-md);
  border: none;
  cursor: pointer;
  font-family: var(--typography-font-family-body);
  font-size: var(--typography-font-size-sm);
  font-weight: var(--typography-font-weight-medium);
}

.context-button--primary {
  background-color: var(--color-brand-primary);
  color: var(--color-text-on-interactive-primary);
}

.context-button--secondary {
  background-color: var(--color-background-secondary);
  color: var(--color-text-secondary);
}

.context-stats {
  display: flex;
  align-items: center;
  gap: var(--spacing-md);
}

.stat-item {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
}

.stat-label {
  font-size: var(--typography-font-size-sm);
  color: var(--color-text-primary);
  font-family: var(--typography-font-family-body);
}

.context-avatars {
  display: flex;
  align-items: center;
  gap: var(--spacing-md);
}

.avatar-container {
  position: relative;
  width: var(--size-avatar-md);
  height: var(--size-avatar-md);
  background-color: var(--color-background-tertiary);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
}

.avatar-icon {
  font-size: var(--typography-font-size-xs);
}

.avatar-badge {
  position: absolute;
  top: calc(-1 * var(--gap-3xs));
  right: calc(-1 * var(--gap-3xs));
}
</style>
`

// –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –≤ document head
if (typeof document !== 'undefined') {
  const styleElement = document.createElement('style')
  styleElement.textContent = storyStyles.replace('<style>', '').replace('</style>', '')
  document.head.appendChild(styleElement)
}
